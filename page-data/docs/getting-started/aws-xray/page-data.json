{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/docs/getting-started/aws-xray","result":{"data":{"mdx":{"id":"2a601fcf-0c42-5627-9e0c-e61ef5caad8e","excerpt":"To support  OpenTelemetry Traces \n in  AWS X-Ray , we have discussed how to use OpenTelemetry SDKs and  Auto Instrumentation Agent \n to create distributedâ€¦","fields":{"slug":"/docs/getting-started/aws-xray/"},"frontmatter":{"title":"Tracing with the AWS Distro for OpenTelemetry Java SDK","description":"To support [OpenTelemetry Traces](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/api.md) in [AWS X-Ray](https://aws.amazon.com/xray/), we have discussed how to use OpenTelemetry SDKs and [Auto Instrumentation Agent](https://github.com/aws-observability/aws-otel-java-instrumentation) to create distributed traces for applications.","image":null,"disableTableOfContents":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tracing with the AWS Distro for OpenTelemetry Java SDK\",\n  \"description\": \"To support [OpenTelemetry Traces](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/api.md) in [AWS X-Ray](https://aws.amazon.com/xray/), we have discussed how to use OpenTelemetry SDKs and [Auto Instrumentation Agent](https://github.com/aws-observability/aws-otel-java-instrumentation) to create distributed traces for applications.\",\n  \"path\": \"/docs/getting-started/aws-xray\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"To support \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/api.md\"\n  }), \"OpenTelemetry Traces\"), \"\\nin \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://aws.amazon.com/xray/\"\n  }), \"AWS X-Ray\"), \", we have discussed how to use OpenTelemetry SDKs and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/aws-observability/aws-otel-java-instrumentation\"\n  }), \"Auto Instrumentation Agent\"), \"\\nto create distributed traces for applications. AWS X-Ray has also worked OpenTelemetry communities to provide \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/master/exporter/awsxrayexporter\"\n  }), \"AWS X-Ray collector exporter\"), \"\\nwhich can convert OpenTelemetry traces to AWS X-Ray format data and display it on AWS X-Ray console.\"), mdx(\"p\", null, \" In this tutorial, we will discuss how to config \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/aws-observability/aws-otel-collector\"\n  }), \"AWS OTel Collector\"), \" to send OpenTelemetry Metrics data to AWS X-Ray\"), mdx(SectionSeparator, {\n    mdxType: \"SectionSeparator\"\n  }), mdx(\"h2\", {\n    \"id\": \"getting-started\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#getting-started\",\n    \"aria-label\": \"getting started permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Getting Started\"), mdx(\"p\", null, \"To get started using AWS OTel Collector to send distributed traces, you first install AWS OTel Collector in your\\ncomputing environment for collecting the telemetry data from various of applications.\"), mdx(\"p\", null, \"For more information about installing AWS OTel Collector for each of the AWS platforms, see the getting started section for\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(Link, {\n    to: \"/docs/setup/ecs\",\n    mdxType: \"Link\"\n  }, \"ECS\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(Link, {\n    to: \"/docs/setup/ec2\",\n    mdxType: \"Link\"\n  }, \"EC2\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(Link, {\n    to: \"/docs/setup/eks\",\n    mdxType: \"Link\"\n  }, \"EKS\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(Link, {\n    to: \"/docs/setup/on-premises\",\n    mdxType: \"Link\"\n  }, \"On-Premises\"))), mdx(\"p\", null, \"We will discuss how to configure AWS OTel Collector for enabling AWS X-Ray.\"), mdx(\"p\", null, \"By Default, AWS OTel Collector has enabled accepting OTLP Traces data and send it to AWS X-Ray backend with the default\\nconfiguration via \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/master/exporter/awsxrayexporter\"\n  }), \"AWS XRay Exporter\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"receivers:\\n  otlp:\\n    protocols:\\n      grpc:\\n        endpoint: localhost:55680\\n      http:\\n        endpoint: localhost:55681\\nprocessors:\\n  batch:\\n    timeout: 1s\\n    send_batch_size: 50\\nexporters:\\n  awsemf:\\nservice:\\n  pipelines:\\n    metrics:\\n      receivers: [otlp]\\n      processors: [batch]\\n      exporters: [awsxray]\\n\")), mdx(\"p\", null, \"You can learn more configuration options of AWS XRay Exporter for AWS OTel Collector at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/master/exporter/awsxrayexporter\"\n  }), \"here\"), \".\\nAnd you can follow our AWS OTel Collector setup instructions to run the examples with the traces show up on AWS X-Ray Console.\\nThere are more example demos in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/getting-started/java-sdk\"\n  }), \"Java SDK\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/getting-started/javascript-sdk\"\n  }), \"JavaScript SDK\"), \" pages.\"), mdx(\"img\", {\n    src: img7,\n    alt: \"Diagram\",\n    style: {\n      \"margin\": \"30px 0\"\n    }\n  }), mdx(\"p\", null, \"Please stay tuned to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/aws-observability\"\n  }), \"AWS Observability Repo\"), \" for more updates.\"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Getting Started"}]}},"pageContext":{"slug":"/docs/getting-started/aws-xray/","githubEditUrl":"https://github.com/rocketseat/gatsby-themes/tree/master/examples/gatsby-theme-docs/src/docs/getting-started/aws-xray.mdx"}},"staticQueryHashes":["2501019404","973074209"]}